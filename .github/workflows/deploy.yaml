name: Deploy Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build frontend
      run: npm run build --workspace=apps/web
      env:
        NODE_ENV: production
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.STAGING_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.STAGING_SUPABASE_ANON_KEY }}
        NEXT_PUBLIC_API_URL: ${{ secrets.STAGING_API_URL }}
        
    - name: Deploy to Vercel (Staging)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./apps/web
        scope: ${{ secrets.VERCEL_ORG_ID }}
        
    - name: Deploy Backend to Railway (Staging)
      run: |
        curl -fsSL https://railway.app/install.sh | sh
        railway login --token ${{ secrets.RAILWAY_TOKEN }}
        cd apps/api
        railway up --service staging-bmad-api --detach
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [test-frontend, test-backend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build frontend
      run: npm run build --workspace=apps/web
      env:
        NODE_ENV: production
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.PROD_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PROD_SUPABASE_ANON_KEY }}
        NEXT_PUBLIC_API_URL: ${{ secrets.PROD_API_URL }}
        NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.PROD_SENTRY_DSN }}
        
    - name: Deploy to Vercel (Production)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./apps/web
        scope: ${{ secrets.VERCEL_ORG_ID }}
        
    - name: Deploy Backend to Railway (Production)
      run: |
        curl -fsSL https://railway.app/install.sh | sh
        railway login --token ${{ secrets.RAILWAY_TOKEN }}
        cd apps/api
        railway up --service bmad-api --detach
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        
    - name: Run Django migrations
      run: |
        cd apps/api
        railway run python manage.py migrate --service bmad-api
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Test frontend
      run: npm run test --workspace=apps/web
      env:
        CI: true

  test-backend:
    name: Test Backend  
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_bmad_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        cd apps/api
        pip install -r requirements.txt
        pip install dj-database-url
        
    - name: Run Django tests
      run: |
        cd apps/api
        python manage.py test
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_bmad_db
        DJANGO_SECRET_KEY: test-secret-key