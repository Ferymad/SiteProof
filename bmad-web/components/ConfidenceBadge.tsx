import React from 'react';\n\ninterface ConfidenceBadgeProps {\n  score: number;\n  label?: string;\n  showPercentage?: boolean;\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport function ConfidenceBadge({ \n  score, \n  label = 'Confidence', \n  showPercentage = true,\n  size = 'md' \n}: ConfidenceBadgeProps) {\n  // Determine color scheme based on confidence score\n  const getConfidenceStyle = (score: number) => {\n    if (score >= 85) {\n      return {\n        bg: 'bg-green-100',\n        border: 'border-green-300',\n        text: 'text-green-800',\n        dot: 'bg-green-500'\n      };\n    } else if (score >= 60) {\n      return {\n        bg: 'bg-yellow-100',\n        border: 'border-yellow-300',\n        text: 'text-yellow-800',\n        dot: 'bg-yellow-500'\n      };\n    } else {\n      return {\n        bg: 'bg-red-100',\n        border: 'border-red-300',\n        text: 'text-red-800',\n        dot: 'bg-red-500'\n      };\n    }\n  };\n\n  const getConfidenceLabel = (score: number) => {\n    if (score >= 85) return 'High';\n    if (score >= 60) return 'Medium';\n    return 'Low';\n  };\n\n  const getSizeClasses = (size: string) => {\n    switch (size) {\n      case 'sm':\n        return 'px-2 py-1 text-xs';\n      case 'lg':\n        return 'px-4 py-2 text-base';\n      default:\n        return 'px-3 py-1 text-sm';\n    }\n  };\n\n  const style = getConfidenceStyle(score);\n  const confidenceLevel = getConfidenceLabel(score);\n  const sizeClasses = getSizeClasses(size);\n\n  return (\n    <div className={`inline-flex items-center rounded-full border ${style.bg} ${style.border} ${style.text} ${sizeClasses}`}>\n      <div className={`w-2 h-2 rounded-full ${style.dot} mr-2`}></div>\n      <span className=\"font-medium\">\n        {label}: {confidenceLevel}\n        {showPercentage && (\n          <span className=\"ml-1 font-normal\">({score}%)</span>\n        )}\n      </span>\n    </div>\n  );\n}\n\n// Additional confidence indicator for construction-specific contexts\ninterface ConstructionConfidenceProps {\n  transcriptionScore?: number;\n  extractionScore?: number;\n  combinedScore: number;\n  hasHighValueItems?: boolean;\n  isFridayAfternoon?: boolean;\n}\n\nexport function ConstructionConfidenceDisplay({\n  transcriptionScore,\n  extractionScore,\n  combinedScore,\n  hasHighValueItems = false,\n  isFridayAfternoon = false\n}: ConstructionConfidenceProps) {\n  return (\n    <div className=\"space-y-2\">\n      {/* Combined score - most prominent */}\n      <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n        <span className=\"font-semibold text-gray-700\">Overall Processing</span>\n        <ConfidenceBadge score={combinedScore} label=\"\" size=\"lg\" />\n      </div>\n      \n      {/* Individual scores */}\n      <div className=\"grid grid-cols-2 gap-2\">\n        {transcriptionScore !== undefined && (\n          <div className=\"text-center\">\n            <div className=\"text-xs text-gray-500 mb-1\">Transcription</div>\n            <ConfidenceBadge score={transcriptionScore} label=\"\" size=\"sm\" />\n          </div>\n        )}\n        \n        {extractionScore !== undefined && (\n          <div className=\"text-center\">\n            <div className=\"text-xs text-gray-500 mb-1\">Data Extraction</div>\n            <ConfidenceBadge score={extractionScore} label=\"\" size=\"sm\" />\n          </div>\n        )}\n      </div>\n      \n      {/* Context warnings */}\n      {hasHighValueItems && (\n        <div className=\"flex items-center gap-2 p-2 bg-orange-50 border border-orange-200 rounded text-orange-800 text-sm\">\n          <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n          </svg>\n          <span>High-value items detected - recommend manual review</span>\n        </div>\n      )}\n      \n      {isFridayAfternoon && (\n        <div className=\"flex items-center gap-2 p-2 bg-blue-50 border border-blue-200 rounded text-blue-800 text-sm\">\n          <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\" clipRule=\"evenodd\" />\n          </svg>\n          <span>Friday afternoon processing - expedited review mode</span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ConfidenceBadge;