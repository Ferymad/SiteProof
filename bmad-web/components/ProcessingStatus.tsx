import React from 'react';\nimport { ConfidenceBadge, ConstructionConfidenceDisplay } from './ConfidenceBadge';\n\ninterface ProcessingResult {\n  transcription?: string;\n  transcription_confidence?: number;\n  extracted_data?: {\n    amounts: string[];\n    materials: string[];\n    dates: string[];\n    safety_concerns: string[];\n    work_status: string | null;\n  };\n  extraction_confidence?: number;\n  combined_confidence?: number;\n  processing_time?: {\n    transcription?: number;\n    extraction?: number;\n    total?: number;\n  };\n  status: 'processing' | 'completed' | 'failed' | 'pending';\n  error?: string;\n}\n\ninterface ProcessingStatusProps {\n  result: ProcessingResult;\n  submissionId: string;\n}\n\nexport function ProcessingStatus({ result, submissionId }: ProcessingStatusProps) {\n  if (result.status === 'processing') {\n    return (\n      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n        <div className=\"flex items-center\">\n          <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 mr-3\"></div>\n          <div>\n            <h3 className=\"text-blue-800 font-medium\">Processing your construction data...</h3>\n            <p className=\"text-blue-600 text-sm mt-1\">\n              Transcribing voice notes and extracting construction information using AI\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (result.status === 'failed') {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n        <div className=\"flex items-center\">\n          <svg className=\"w-6 h-6 text-red-500 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n          </svg>\n          <div>\n            <h3 className=\"text-red-800 font-medium\">Processing Failed</h3>\n            <p className=\"text-red-600 text-sm mt-1\">\n              {result.error || 'Unable to process your construction data. Please try again.'}\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (result.status === 'completed') {\n    const hasHighValueItems = result.extracted_data?.amounts.some(amount => {\n      // Check for high-value amounts (over €1000 or £1000)\n      const numericValue = parseFloat(amount.replace(/[^0-9.]/g, ''));\n      return numericValue > 1000;\n    }) || false;\n\n    const currentHour = new Date().getHours();\n    const currentDay = new Date().getDay(); // 0 = Sunday, 5 = Friday\n    const isFridayAfternoon = currentDay === 5 && currentHour >= 14 && currentHour < 18;\n\n    return (\n      <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 space-y-4\">\n        {/* Success Header */}\n        <div className=\"flex items-center\">\n          <svg className=\"w-6 h-6 text-green-500 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\n          </svg>\n          <div>\n            <h3 className=\"text-green-800 font-medium\">Processing Complete</h3>\n            <p className=\"text-green-600 text-sm mt-1\">\n              Your construction evidence has been processed and analyzed\n            </p>\n          </div>\n        </div>\n\n        {/* Confidence Display */}\n        {result.combined_confidence && (\n          <ConstructionConfidenceDisplay\n            transcriptionScore={result.transcription_confidence}\n            extractionScore={result.extraction_confidence}\n            combinedScore={result.combined_confidence}\n            hasHighValueItems={hasHighValueItems}\n            isFridayAfternoon={isFridayAfternoon}\n          />\n        )}\n\n        {/* Transcription Results */}\n        {result.transcription && (\n          <div className=\"bg-white rounded-lg border p-4\">\n            <h4 className=\"font-medium text-gray-900 mb-2 flex items-center\">\n              <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2m0 0V1a1 1 0 011-1h2a1 1 0 011 1v16.5a1 1 0 01-1 1H4a1 1 0 01-1-1V1a1 1 0 011-1h2a1 1 0 011 1v3z\" />\n              </svg>\n              Voice Note Transcription\n            </h4>\n            <div className=\"text-gray-700 text-sm bg-gray-50 rounded p-3 font-mono leading-relaxed\">\n              {result.transcription}\n            </div>\n          </div>\n        )}\n\n        {/* Extracted Data */}\n        {result.extracted_data && (\n          <div className=\"bg-white rounded-lg border p-4\">\n            <h4 className=\"font-medium text-gray-900 mb-3 flex items-center\">\n              <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n              </svg>\n              Extracted Construction Data\n            </h4>\n            \n            <div className=\"grid md:grid-cols-2 gap-4\">\n              {/* Amounts */}\n              {result.extracted_data.amounts.length > 0 && (\n                <div>\n                  <h5 className=\"text-sm font-medium text-gray-700 mb-2 flex items-center\">\n                    <span className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></span>\n                    Amounts & Values\n                  </h5>\n                  <div className=\"space-y-1\">\n                    {result.extracted_data.amounts.map((amount, index) => (\n                      <div key={index} className=\"text-sm bg-green-50 px-2 py-1 rounded border border-green-200\">\n                        {amount}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Materials */}\n              {result.extracted_data.materials.length > 0 && (\n                <div>\n                  <h5 className=\"text-sm font-medium text-gray-700 mb-2 flex items-center\">\n                    <span className=\"w-2 h-2 bg-blue-500 rounded-full mr-2\"></span>\n                    Materials\n                  </h5>\n                  <div className=\"space-y-1\">\n                    {result.extracted_data.materials.map((material, index) => (\n                      <div key={index} className=\"text-sm bg-blue-50 px-2 py-1 rounded border border-blue-200\">\n                        {material}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Dates */}\n              {result.extracted_data.dates.length > 0 && (\n                <div>\n                  <h5 className=\"text-sm font-medium text-gray-700 mb-2 flex items-center\">\n                    <span className=\"w-2 h-2 bg-purple-500 rounded-full mr-2\"></span>\n                    Dates & Deadlines\n                  </h5>\n                  <div className=\"space-y-1\">\n                    {result.extracted_data.dates.map((date, index) => (\n                      <div key={index} className=\"text-sm bg-purple-50 px-2 py-1 rounded border border-purple-200\">\n                        {date}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Safety Concerns */}\n              {result.extracted_data.safety_concerns.length > 0 && (\n                <div>\n                  <h5 className=\"text-sm font-medium text-gray-700 mb-2 flex items-center\">\n                    <span className=\"w-2 h-2 bg-red-500 rounded-full mr-2\"></span>\n                    Safety Concerns\n                  </h5>\n                  <div className=\"space-y-1\">\n                    {result.extracted_data.safety_concerns.map((concern, index) => (\n                      <div key={index} className=\"text-sm bg-red-50 px-2 py-1 rounded border border-red-200\">\n                        {concern}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Work Status */}\n            {result.extracted_data.work_status && (\n              <div className=\"mt-4 p-3 bg-gray-50 rounded border\">\n                <h5 className=\"text-sm font-medium text-gray-700 mb-1\">Work Status Summary</h5>\n                <p className=\"text-sm text-gray-600\">{result.extracted_data.work_status}</p>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Processing Time */}\n        {result.processing_time && (\n          <div className=\"text-xs text-gray-500 text-right\">\n            Processing completed in {result.processing_time.total?.toFixed(1)}s\n            {result.processing_time.transcription && result.processing_time.extraction && (\n              <span>\n                {' '}(Transcription: {result.processing_time.transcription.toFixed(1)}s, \n                Extraction: {result.processing_time.extraction.toFixed(1)}s)\n              </span>\n            )}\n          </div>\n        )}\n\n        {/* Next Steps */}\n        <div className=\"bg-blue-50 border border-blue-200 rounded p-3\">\n          <h4 className=\"text-blue-800 font-medium mb-2\">What's Next?</h4>\n          <p className=\"text-blue-700 text-sm\">\n            This processed data is now ready for PDF evidence generation (Story 1A.3). \n            The extracted information can be used to create professional construction evidence packages.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  // Default pending state\n  return (\n    <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n      <div className=\"flex items-center\">\n        <div className=\"w-6 h-6 bg-gray-300 rounded-full mr-3 flex items-center justify-center\">\n          <span className=\"text-gray-600 text-xs\">?</span>\n        </div>\n        <div>\n          <h3 className=\"text-gray-700 font-medium\">Ready for Processing</h3>\n          <p className=\"text-gray-600 text-sm mt-1\">\n            Click \"Process with AI\" to begin transcription and data extraction\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProcessingStatus;